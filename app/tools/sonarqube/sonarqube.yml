apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarqube-pv
  namespace: gen-ai
spec:
  storageClassName: standard
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  local:
    path: /mnt/genai-sonarqube
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8s-node2-dev

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-pvc
  namespace: gen-ai
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: gen-ai
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      imagePullSecrets:
        - name: docker-hub-tworpnet
      nodeSelector:
        kubernetes.io/hostname: k8s-node2-dev
      containers:
        - name: sonarqube
          image: tworpdev/genai.sonarqube:10.5.0-community
          imagePullPolicy: Always
          ports:
          - containerPort: 9000   # Sonarqube 
          resources:
            limits:
              cpu: "1"
              memory:  2048Mi
            requests:
              cpu: "0.1"
              memory:  100Mi
          volumeMounts:
            - name: sonarqube-data
              mountPath: /opt/sonarqube/data
      securityContext:
        fsGroup: 1000
      volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: sonarqube-service
  namespace: gen-ai
spec:
  selector:
    app: sonarqube
  ports:
    - name: sonarqube
      protocol: TCP
      port: 9000
      targetPort: 9000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarqube-ingress
  namespace: gen-ai
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /sonarqube
        pathType: Prefix
        backend:
          service:
            name: sonarqube-service
            port:
              number: 9000